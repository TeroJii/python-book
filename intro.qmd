---
jupyter: python3
---

# Introduction

Python is an object-oriented, easy-to-use, high-level, general-purpose programming language. There is a popular saying in the programming community along the lines of:

> Python is the second best language for everything.

which really is a testament on how versatile the language really is. Let's take a look at some of the basics of the language before diving in deeper.

## Basic Data Types

Numbers, strings and booleans are some of the most basic data types found in Python. Let's quickly go through some basic operations that can be performed on these data types.

### Working with numbers

Numbers can be categorized into integers and floats, depending on the use of a decimal point. Both can be used for performing basic arithmetics as shown below:

```{python}
#| code-fold: false
1 + 1
```

```{python}	
#| code-fold: false
1.0 + 2.5
```

This as such is not super useful. However, we can assing numbers (as well as other data types) into variables, which will help us store and manipulate data:

```{python}
#| code-fold: false
my_iq = 259

print(my_iq)
```

When we input large numbers, we can use underscores to make them more readable:

```{python}
#| code-fold: false

number_of_people_reading_this_book = 1_000_000

number_of_people_reading_this_book
```

Basic arithmetic operations can be performed on numbers using the following syntax:

```{python}
#| code-fold: false

a = 10
b = 3

# addition
a + b
```

```{python}
#| code-fold: false

# subtraction
a - b
```

```{python}
#| code-fold: false

# multiplication
a * b
```

```{python}
#| code-fold: false

# division
a / b
```

```{python}
#| code-fold: false

# floor division
a // b
```

```{python}
#| code-fold: false

# modulo
a % b
```

```{python}
#| code-fold: false

# exponentiation
a ** b
```

### Strings

Strings are used to represent text data. They can be enclosed in either single `'` or double `"` quotes.
Some basic operations on strings include concatenation and repetition:

```{python}
#| code-fold: false
"Hello" + " " + "World"
```

```{python}
#| code-fold: false
"Hello" * 3
```

Strings can also be indexed and sliced:

```{python}
#| code-fold: false
my_string = "Hello World"

# indexing
print(my_string[0])
```

```{python}
#| code-fold: false
# slicing
print(my_string[0:5])
```

Sometimes we might have to convert numbers to strings and vice versa. This can be done using the `str()` and `int()` functions:

```{python}
#| code-fold: false

# converting a number to a string
str(123)
```

```{python}	
#| code-fold: false

string_disguised_as_number = '123'

# converting a string to a number
int(string_disguised_as_number)
```

In case of floats, we can use the `float()` function:

```{python}
#| code-fold: false

# converting a string to a float
float('3.14')
```


### Booleans

Booleans are used to represent truth values, namely `True` and `False`. They can be used in conjunction with logical operators such as `and`, `or` and `not`:

```{python}
#| code-fold: false
True and False
```